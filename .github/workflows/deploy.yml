name: deploy

# FIXME:
on: push

env:
  AWS_REGION: ap-northeast-1

jobs:
  deploy-ecr:
    name: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push
        uses: docker/build-push-action@v3
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: rails_on_ecs_repository
          IMAGE_TAG: ${{ github.sha }}
        with:
          push: true
          tags: ${REGISTRY}/${REPOSITORY}:${IMAGE_TAG}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: logout
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

      - name: render new task definition
        id: render-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs/rails-ecs-task-def.json
          container-name: web
          image: ${{ steps.login-ecr.outputs.registry }}/rails_on_ecs_repository:${{ github.sha }}

      - name: register new task definition family
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-container.outputs.task-definition }}
          service: rails_on_ecs
          cluster: rails-on-ecs
